#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# WARNING! This file is the exact copy of struts-messages.properties!
# See https://issues.apache.org/jira/browse/WW-4195 for more details!

struts.messages.invalid.token=The form has already been processed or no token was supplied, please try again.
struts.internal.invalid.token=Form token {0} does not match the session token {1}.

struts.messages.bypass.request=Bypassing {0}/{1}
struts.messages.current.file=File {0} {1} {2} {3}
# 0 - input name
struts.messages.invalid.file=Could not find a Filename for {0}. Verify that a valid file was submitted.
# 0 - original filename
struts.messages.invalid.content.type=Could not find a Content-Type for {0}. Verify that a valid file was submitted.
struts.messages.removing.file=Removing file {0} {1}
struts.messages.error.uploading=Error uploading: {0}
# 0 - input name
# 1 - original filename
# 2 - file name after uploading the file
# 3 - size of the uploaded files
# 4 - maximum allowed size
struts.messages.error.file.too.large=The file is too large to be uploaded: {0} "{1}" "{2}" has size {3} and allowed mx size is {4}
# 0 - field name
# 1 - max string length
# 2 - actual size
struts.messages.upload.error.parameter.too.long=The request parameter "{0}" was too long. Max length allowed is {1}, but found {2}!
# 0 - input name
# 1 - original filename
# 2 - file name after uploading the file
# 3 - content type of the file
struts.messages.error.content.type.not.allowed=Content-Type not allowed: {0} "{1}" "{2}" {3}
# 0 - input name
# 1 - original filename
# 2 - file name after uploading the file
# 3 - content type of the file
struts.messages.error.file.extension.not.allowed=File extension not allowed: {0} "{1}" "{2}" {3}
# dedicated messages used to handle various problems with file upload - check {@link JakartaMultiPartRequest#parse(HttpServletRequest, String)}
# params depend on exception being handled
# FileUploadByteCountLimitException
# 0 - field name
# 1 - file name
# 2 - permitted
# 3 - actual size
struts.messages.upload.error.FileUploadByteCountLimitException=File {1} assigned to {0} exceeded allowed size limit! Max size allowed is: {2} but file was: {3}!

# FileUploadFileCountLimitException
# 0 - limit
struts.messages.upload.error.FileUploadFileCountLimitException=Request exceeded allowed number of files! Permitted number of files is: {0}!

# FileUploadSizeException
# 1 - permitted size
# 2 - actual size
struts.messages.upload.error.FileUploadSizeException=Request exceeded allowed size limit! Max size allowed is: {0} but request was: {1}!

# FileUploadContentTypeException
# 0 - content type
struts.messages.upload.error.FileUploadContentTypeException=Request has wrong content type: {0}!

# Default error message when handling multi-part request
struts.messages.upload.error.FileUploadException=Error parsing the multi-part request.

devmode.notification=Developer Notification (set struts.devMode to false to disable this message):\n{0}

struts.exception.missing-package-action.with-context = There is no Action mapped for namespace [{0}] and action name [{1}] associated with context path [{2}].
