<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
-->
<!DOCTYPE validators PUBLIC "-//Apache Struts//XWork Validator 1.0.2//EN" "http://struts.apache.org/dtds/xwork-validator-1.0.2.dtd">
<validators>
    <field name="name">
        <field-validator type="required">
            <message key="name.key">You must enter a value for name.</message>
        </field-validator>
    </field>

    <field name="email">
        <field-validator type="email" short-circuit="true">
            <message>Not a valid e-mail.</message>
        </field-validator>
        <field-validator type="fieldexpression">
            <param name="expression">email.endsWith('mycompany.com')</param>
            <message>Email not from the right company.</message>
        </field-validator>
    </field>

    <field name="email2">
        <field-validator type="email">
            <message>Not a valid e-mail2.</message>
        </field-validator>
        <field-validator type="fieldexpression">
            <param name="expression">email.endsWith('mycompany.com')</param>
            <message>Email2 not from the right company.</message>
        </field-validator>
    </field>

    <validator type="expression">
        <param name="expression">email.startsWith('mark')</param>
        <message>Email does not start with mark</message>
    </validator>
    <validator type="expression">
        <param name="expression">email2.startsWith('mark')</param>
        <message>Email2 does not start with mark</message>
    </validator>

</validators>
