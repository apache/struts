#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

#
# Apache Felix Configuration Properties
#
# Notes:
#
# - For the current unit tests, any framework startlevel (org.osgi.framework.startlevel.beginning) higher than 0 will 
#   result in the Felix startup compaining with errors:
#
#     "ERROR: Bundle osgi.core [2] Error starting file:/somepath/osgi.core-7.0.0.jar (org.osgi.framework.BundleException: Unable to resolve osgi.core [2](R 2.0):" \
#     " missing requirement [osgi.core [2](R 2.0)] osgi.unresolvable; (&(must.not.resolve=*)(!(must.not.resolve=*))) Unresolved requirements:" \
#     " [[osgi.core [2](R 2.0)] osgi.unresolvable; (&(must.not.resolve=*)(!(must.not.resolve=*)))])".
#
#   The only match for this error that could be found was at https://bz.apache.org/netbeans/show_bug.cgi?id=195862 ,
#   which indicated their resolution was to mark the osgi-core jar dependency scope as "provided".  Trying that same change
#   in the project POM did not resolve the error for the unit tests (and might not be safe to do for the plugin, anyway).
#
#   Since no solution has been found to avoid the error with higher startlevels, the current option is to set the framework
#   startlevel to 0.  Maybe it is due to some odd classpath dependency, or the fact that we are trying to run Felix from
#   within Maven without using the maven-bundle-plugin (since we are not actually creating a bunde with an Export-Package).
#   It could also be because we do not have a real bundles directory for Felix in the unit tests, so it defaults to the 
#   felix-cache directory as its bundle directory.
#
# - If attempting a second start while another instance is active, cache locking (felix.cache.locking) must be set to false.
#   If you see:
#
#     "ERROR: Error creating bundle cache.  java.lang.Exception: Unable to lock bundle cache: java.nio.channels.OverlappingFileLockException"
#
#   in the output from one of the unit tests, setting the value to false is a workaround.  Before changing the felix.cache.locking level, 
#   check the logic of the unit test to *confirm* that you intended to start a second concurrent instance of Felix (otherwise
#   it is probably due to a bug in the unit test logic).
#
# - If Felix can be initialized by the unit tests, using this configuration, it provides a minimal sanity check that the
#   features of the Struts 2 OSGi plugin that modify the properties file still work.
#
# Common Settings:  Logging level: Info.  Locking: True.  StartLevel: 0.  Storage Clean: On first initialization.
#
felix.log.level=3
felix.cache.locking=true
org.osgi.framework.startlevel.beginning=0
org.osgi.framework.storage.clean=onFirstInit

#
# OSGi Framework Configuration Properties.
#
# Based on default.properties from within Felix 6.0.3 (org.apache.felix.main-6.0.3.jar)
#

#org.osgi.service.http.port=8080  # Reference only

# New-style generic execution environment capabilities.
# Concatenated from original Felix properties, attempted to extend for Java 9, 10, 11.
org.osgi.framework.system.capabilities= \
 osgi.service; objectClass:List<String>=org.osgi.service.resolver.Resolver; uses:=org.osgi.service.resolver, \
 osgi.service; objectClass:List<String>=org.osgi.service.startlevel.StartLevel; uses:=org.osgi.service.startlevel, \
 osgi.service; objectClass:List<String>=org.osgi.service.packageadmin.PackageAdmin; uses:=org.osgi.service.packageadmin, \
 osgi.ee; osgi.ee="OSGi/Minimum"; version:List<Version>="1.0,1.1,1.2", \
 osgi.ee; osgi.ee="JavaSE"; version:List<Version>="1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,9,10,11", \
 osgi.ee; osgi.ee="JavaSE/compact1"; version:List<Version>="1.8,9,10,11", \
 osgi.ee; osgi.ee="JavaSE/compact2"; version:List<Version>="1.8,9,10,11", \
 osgi.ee; osgi.ee="JavaSE/compact3"; version:List<Version>="1.8,9,10,11"

# Deprecated old-style execution environment properties.
# Best guess for execution environment from Java 11 and earlier, based on Felix 6.0.3 default.properties.
org.osgi.framework.executionenvironment= \
 JavaSE-11,JavaSE-10,JavaSE-9,JavaSE-1.8,JavaSE-1.7,JavaSE-1.6,J2SE-1.5,J2SE-1.4,J2SE-1.3, \
 J2SE-1.2,JRE-1.1,JRE-1.0,OSGi/Minimum-1.2,OSGi/Minimum-1.1, \
 OSGi/Minimum-1.0

# Framework system packages.
# Listing from Felix 6.0.3 default.properties, and osgi-core-7.0 manifest, modified slightly to be alphabetical.
# Also changed to allow for the jre-specification-version detection in the Struts 2 Struts 2 OSGi plugin.
org.osgi.framework.system.packages=\
 org.osgi.dto; version="1.1.0", \
 org.osgi.framework; version="1.9.0", \
 org.osgi.framework.dto; version="1.8.0"; uses:="org.osgi.dto", \
 org.osgi.framework.hooks.bundle; version="1.1.0"; uses:="org.osgi.framework", \
 org.osgi.framework.hooks.resolver; version="1.0.0"; uses:="org.osgi.framework.wiring", \
 org.osgi.framework.hooks.service; version="1.1.0"; uses:="org.osgi.framework", \
 org.osgi.framework.hooks.weaving; version="1.1.0"; uses:="org.osgi.framework.wiring", \
 org.osgi.framework.launch; version="1.2.0"; uses:="org.osgi.framework", \
 org.osgi.framework.namespace; version="1.1.0"; uses:="org.osgi.resource", \
 org.osgi.framework.startlevel; version="1.0.0"; uses:="org.osgi.framework", \
 org.osgi.framework.startlevel.dto; version="1.0.0"; uses:="org.osgi.dto", \
 org.osgi.framework.wiring; version="1.2.0"; uses:="org.osgi.framework,org.osgi.resource", \
 org.osgi.framework.wiring.dto; version="1.3.0"; uses:="org.osgi.dto,org.osgi.resource.dto", \
 org.osgi.resource; version="1.0.0", \
 org.osgi.resource.dto; version="1.0.0"; uses:="org.osgi.dto", \
 org.osgi.service.packageadmin; version="1.2.0"; uses:="org.osgi.framework", \
 org.osgi.service.startlevel; version="1.1.0"; uses:="org.osgi.framework", \
 org.osgi.service.resolver; version="1.1.0"; uses:="org.osgi.resource", \
 org.osgi.service.url; version="1.0.0", \
 org.osgi.util.tracker; version="1.5.2"; uses:="org.osgi.framework" \
 ${jre-${java.specification.version}}
# Note:  Sometimes the line "${jre-${java.specification.version}}" is not preceded by a ", \" in the line above (for a 
#        typical Felix configuration).  Make sure to either include ", \" preceding it in the line above, or as the
#        first line in jre-x.y in your configuration.  Forgetting the ", \", or having duplicates, will result in
#        configuration parsing errors for Felix.

# Felix, when running standalone, can perform substitution includes for the jre-x.y system package properties elements
# to simplify inclusions.  The Struts 2 OSGi plugin must have literal elements for the system package properties,
# so there may be some redundancy if supporting multiple java versions.  This test properties file provides a fairly
# complete sample, but see the Felix default.properties or active headers in a running Felix instance for an up-to-date
# listing.
#
# Note:  Felix uses "${felix.detect.java.version}" for its replacement string, while the Struts 2 OSGi plugin
# uses "${detect.java.version}" instead.  The end result should be version elements like "0.0.0.JavaSE_001_008" for
# Java 8 or older, and "0.0.0.JavaSE_009" for Java 9 and newer (009 for 9, 010 for 10, 011 for 11, etc.).
# As of Struts 2.5.24, the Struts 2 OSGi plugin has added some support for replacing the Felix-style strings,
# but for clarity your configuration should probably use only one style of replacement string identifiers.

# Structured from Felix 6.0.3 default.properties for jre-1.7.
# Note: May contain minor errors, could not be interactively verified using felix:headers under Java 7.
jre-1.7=, \
 java.applet; version="${detect.java.version}", \
 java.awt; version="${detect.java.version}", \
 java.awt.color; version="${detect.java.version}", \
 java.awt.datatransfer; version="${detect.java.version}", \
 java.awt.dnd; version="${detect.java.version}", \
 java.awt.event; version="${detect.java.version}", \
 java.awt.font; version="${detect.java.version}", \
 java.awt.geom; version="${detect.java.version}", \
 java.awt.im; version="${detect.java.version}", \
 java.awt.im.spi; version="${detect.java.version}", \
 java.awt.image; version="${detect.java.version}", \
 java.awt.image.renderable; version="${detect.java.version}", \
 java.awt.print; version="${detect.java.version}", \
 java.beans; version="${detect.java.version}", \
 java.beans.beancontext; version="${detect.java.version}", \
 java.io; version="${detect.java.version}", \
 java.lang; version="${detect.java.version}", \
 java.lang.annotation; version="${detect.java.version}", \
 java.lang.instrument; version="${detect.java.version}", \
 java.lang.invoke; version="${detect.java.version}", \
 java.lang.management; version="${detect.java.version}", \
 java.lang.ref; version="${detect.java.version}", \
 java.lang.reflect; version="${detect.java.version}", \
 java.math; version="${detect.java.version}", \
 java.net; version="${detect.java.version}", \
 java.nio; version="${detect.java.version}", \
 java.nio.channels; version="${detect.java.version}", \
 java.nio.channels.spi; version="${detect.java.version}", \
 java.nio.charset; version="${detect.java.version}", \
 java.nio.charset.spi; version="${detect.java.version}", \
 java.nio.file; version="${detect.java.version}", \
 java.nio.file.attribute; version="${detect.java.version}", \
 java.nio.file.spi; version="${detect.java.version}", \
 java.rmi; version="${detect.java.version}", \
 java.rmi.activation; version="${detect.java.version}", \
 java.rmi.dgc; version="${detect.java.version}", \
 java.rmi.registry; version="${detect.java.version}", \
 java.rmi.server; version="${detect.java.version}", \
 java.security; version="${detect.java.version}", \
 java.security.acl; version="${detect.java.version}", \
 java.security.cert; version="${detect.java.version}", \
 java.security.interfaces; version="${detect.java.version}", \
 java.security.spec; version="${detect.java.version}", \
 java.sql; version="${detect.java.version}", \
 java.text; version="${detect.java.version}", \
 java.text.spi; version="${detect.java.version}", \
 java.util; version="${detect.java.version}", \
 java.util.concurrent; version="${detect.java.version}", \
 java.util.concurrent.atomic; version="${detect.java.version}", \
 java.util.concurrent.locks; version="${detect.java.version}", \
 java.util.jar; version="${detect.java.version}", \
 java.util.logging; version="${detect.java.version}", \
 java.util.prefs; version="${detect.java.version}", \
 java.util.regex; version="${detect.java.version}", \
 java.util.spi; version="${detect.java.version}", \
 java.util.zip; version="${detect.java.version}", \
 javax.accessibility; uses:="javax.swing.text"; version="${detect.java.version}", \
 javax.activation; version="${detect.java.version}", \
 javax.activity; version="${detect.java.version}", \
 javax.annotation; version="${detect.java.version}", \
 javax.annotation.processing; uses:="javax.lang.model,javax.lang.model.element,javax.lang.model.util,javax.tools"; version="${detect.java.version}", \
 javax.crypto.interfaces; uses:="javax.crypto,javax.crypto.spec"; version="${detect.java.version}", \
 javax.crypto.spec; uses:="javax.crypto"; version="${detect.java.version}", \
 javax.imageio; uses:="javax.imageio.event,javax.imageio.metadata,javax.imageio.spi,javax.imageio.stream"; version="${detect.java.version}", \
 javax.imageio.event; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.imageio.metadata; uses:="javax.imageio,org.w3c.dom"; version="${detect.java.version}", \
 javax.imageio.plugins.bmp; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.imageio.plugins.jpeg; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.imageio.spi; uses:="javax.imageio,javax.imageio.metadata,javax.imageio.stream"; version="${detect.java.version}", \
 javax.imageio.stream; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.jws; version="${detect.java.version}", \
 javax.jws.soap; version="${detect.java.version}", \
 javax.lang.model.element; uses:="javax.lang.model,javax.lang.model.type"; version="${detect.java.version}", \
 javax.lang.model.type; uses:="javax.lang.model,javax.lang.model.element"; version="${detect.java.version}", \
 javax.lang.model.util; uses:="javax.annotation.processing,javax.lang.model,javax.lang.model.element,javax.lang.model.type"; version="${detect.java.version}", \
 javax.management; uses:="javax.management.loading,javax.management.openmbean"; version="${detect.java.version}", \
 javax.management.loading; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.modelmbean; uses:="javax.management,javax.management.loading"; version="${detect.java.version}", \
 javax.management.monitor; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.openmbean; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.relation; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.remote; uses:="javax.management,javax.security.auth"; version="${detect.java.version}", \
 javax.management.remote.rmi; uses:="javax.management,javax.management.loading,javax.management.remote,javax.naming,javax.rmi,javax.rmi.CORBA,javax.rmi.ssl,javax.security.auth,org.omg.CORBA,org.omg.CORBA.portable,org.omg.CORBA_2_3.portable"; version="${detect.java.version}", \
 javax.management.timer; uses:="javax.management"; version="${detect.java.version}", \
 javax.naming; uses:="javax.naming.spi"; version="${detect.java.version}", \
 javax.naming.directory; uses:="javax.naming"; version="${detect.java.version}", \
 javax.naming.event; uses:="javax.naming,javax.naming.directory"; version="${detect.java.version}", \
 javax.naming.ldap; uses:="javax.naming,javax.naming.directory,javax.naming.event,javax.net.ssl"; version="${detect.java.version}", \
 javax.naming.spi; uses:="javax.naming,javax.naming.directory"; version="${detect.java.version}", \
 javax.net; version="${detect.java.version}", \
 javax.net.ssl; uses:="javax.net,javax.security.auth.x500,javax.security.cert"; version="${detect.java.version}", \
 javax.print; uses:="javax.print.attribute,javax.print.attribute.standard,javax.print.event"; version="${detect.java.version}", \
 javax.print.attribute; version="${detect.java.version}", \
 javax.print.attribute.standard; uses:="javax.print.attribute"; version="${detect.java.version}", \
 javax.print.event; uses:="javax.print,javax.print.attribute"; version="${detect.java.version}", \
 javax.rmi; uses:="javax.rmi.CORBA,org.omg.CORBA"; version="${detect.java.version}", \
 javax.rmi.CORBA; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.CORBA_2_3.portable,org.omg.SendingContext"; version="${detect.java.version}", \
 javax.rmi.ssl; uses:="javax.net,javax.net.ssl"; version="${detect.java.version}", \
 javax.script; version="${detect.java.version}", \
 javax.security.auth; version="${detect.java.version}", \
 javax.security.auth.callback; version="${detect.java.version}", \
 javax.security.auth.kerberos; uses:="javax.crypto,javax.security.auth"; version="${detect.java.version}", \
 javax.security.auth.login; uses:="javax.security.auth,javax.security.auth.callback"; version="${detect.java.version}", \
 javax.security.auth.spi; uses:="javax.security.auth,javax.security.auth.callback,javax.security.auth.login"; version="${detect.java.version}", \
 javax.security.auth.x500; uses:="javax.security.auth"; version="${detect.java.version}", \
 javax.security.cert; version="${detect.java.version}", \
 javax.security.sasl; uses:="javax.security.auth.callback"; version="${detect.java.version}", \
 javax.sound.midi; uses:="javax.sound.midi.spi"; version="${detect.java.version}", \
 javax.sound.midi.spi; uses:="javax.sound.midi"; version="${detect.java.version}", \
 javax.sound.sampled; uses:="javax.sound.sampled.spi"; version="${detect.java.version}", \
 javax.sound.sampled.spi; uses:="javax.sound.sampled"; version="${detect.java.version}", \
 javax.sql; uses:="javax.transaction.xa"; version="${detect.java.version}", \
 javax.sql.rowset; uses:="javax.sql,javax.sql.rowset.serial,javax.sql.rowset.spi"; version="${detect.java.version}", \
 javax.sql.rowset.serial; uses:="javax.sql.rowset"; version="${detect.java.version}", \
 javax.sql.rowset.spi; uses:="javax.naming,javax.sql,javax.sql.rowset"; version="${detect.java.version}", \
 javax.swing; uses:="javax.accessibility,javax.print,javax.print.attribute,javax.swing.border,javax.swing.colorchooser,javax.swing.event,javax.swing.filechooser,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.plaf.metal,javax.swing.table,javax.swing.text,javax.swing.text.html,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.border; uses:="javax.swing"; version="${detect.java.version}", \
 javax.swing.colorchooser; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.event,javax.swing.text"; version="${detect.java.version}", \
 javax.swing.event; uses:="javax.swing,javax.swing.table,javax.swing.text,javax.swing.tree,javax.swing.undo"; version="${detect.java.version}", \
 javax.swing.filechooser; uses:="javax.swing"; version="${detect.java.version}", \
 javax.swing.plaf; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.filechooser,javax.swing.text,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.basic; uses:="javax.accessibility,javax.sound.sampled,javax.swing,javax.swing.border,javax.swing.colorchooser,javax.swing.event,javax.swing.filechooser,javax.swing.plaf,javax.swing.plaf.synth,javax.swing.table,javax.swing.text,javax.swing.text.html,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.nimbus; uses:="javax.swing,javax.swing.border,javax.swing.plaf,javax.swing.plaf.synth"; version="${detect.java.version}", \
 javax.swing.plaf.metal; uses:="javax.swing,javax.swing.border,javax.swing.event,javax.swing.filechooser,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.text,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.multi; uses:="javax.accessibility,javax.swing,javax.swing.filechooser,javax.swing.plaf,javax.swing.text,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.synth; uses:="javax.swing,javax.swing.border,javax.swing.colorchooser,javax.swing.event,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.table,javax.swing.text,javax.swing.tree,javax.xml.parsers,org.xml.sax,org.xml.sax.helpers"; version="${detect.java.version}", \
 javax.swing.table; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.event,javax.swing.plaf"; version="${detect.java.version}", \
 javax.swing.text; uses:="javax.accessibility,javax.print,javax.print.attribute,javax.swing,javax.swing.event,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.text.html,javax.swing.tree,javax.swing.undo"; version="${detect.java.version}", \
 javax.swing.text.html; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.event,javax.swing.plaf,javax.swing.text,javax.swing.undo"; version="${detect.java.version}", \
 javax.swing.text.html.parser; uses:="javax.swing.text,javax.swing.text.html"; version="${detect.java.version}", \
 javax.swing.text.rtf; uses:="javax.swing.text"; version="${detect.java.version}", \
 javax.swing.tree; uses:="javax.swing,javax.swing.border,javax.swing.event,javax.swing.plaf,javax.swing.plaf.basic"; version="${detect.java.version}", \
 javax.swing.undo; uses:="javax.swing,javax.swing.event"; version="${detect.java.version}", \
 javax.tools; uses:="javax.annotation.processing,javax.lang.model,javax.lang.model.element"; version="${detect.java.version}", \
 javax.transaction; version="${detect.java.version}", \
 javax.transaction.xa; version="${detect.java.version}", \
 javax.xml; version="${detect.java.version}", \
 javax.xml.bind; uses:="javax.xml.bind.annotation,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.datatype,javax.xml.namespace,javax.xml.stream,javax.xml.transform,javax.xml.transform.stream,javax.xml.validation,org.w3c.dom,org.xml.sax"; version="${detect.java.version}", \
 javax.xml.bind.annotation; uses:="javax.xml.bind,javax.xml.parsers,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.bind.annotation.adapters; uses:="javax.xml.bind"; version="${detect.java.version}", \
 javax.xml.bind.attachment; uses:="javax.activation"; version="${detect.java.version}", \
 javax.xml.bind.helpers; uses:="javax.xml.bind,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.parsers,javax.xml.stream,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,javax.xml.transform.stream,javax.xml.validation,org.w3c.dom,org.xml.sax"; version="${detect.java.version}", \
 javax.xml.bind.util; uses:="javax.xml.bind,javax.xml.transform.sax,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers"; version="${detect.java.version}", \
 javax.xml.crypto; uses:="javax.xml.crypto.dsig.keyinfo"; version="${detect.java.version}", \
 javax.xml.crypto.dom; uses:="javax.xml.crypto,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.crypto.dsig; uses:="javax.xml.crypto,javax.xml.crypto.dsig.keyinfo,javax.xml.crypto.dsig.spec"; version="${detect.java.version}", \
 javax.xml.crypto.dsig.dom; uses:="javax.xml.crypto,javax.xml.crypto.dom,javax.xml.crypto.dsig,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.crypto.dsig.keyinfo; uses:="javax.xml.crypto"; version="${detect.java.version}", \
 javax.xml.crypto.dsig.spec; uses:="javax.xml.crypto"; version="${detect.java.version}", \
 javax.xml.datatype; uses:="javax.xml.namespace"; version="${detect.java.version}", \
 javax.xml.namespace; version="${detect.java.version}", \
 javax.xml.parsers; uses:="javax.xml.validation,org.w3c.dom,org.xml.sax,org.xml.sax.helpers"; version="${detect.java.version}", \
 javax.xml.soap; uses:="javax.activation,javax.xml.namespace,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.stream; uses:="javax.xml.namespace,javax.xml.stream.events,javax.xml.stream.util,javax.xml.transform"; version="${detect.java.version}", \
 javax.xml.stream.events; uses:="javax.xml.namespace,javax.xml.stream"; version="${detect.java.version}", \
 javax.xml.stream.util; uses:="javax.xml.namespace,javax.xml.stream,javax.xml.stream.events"; version="${detect.java.version}", \
 javax.xml.transform; version="${detect.java.version}", \
 javax.xml.transform.dom; uses:="javax.xml.transform,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.transform.sax; uses:="javax.xml.transform,javax.xml.transform.stream,org.xml.sax,org.xml.sax.ext"; version="${detect.java.version}", \
 javax.xml.transform.stax; uses:="javax.xml.stream,javax.xml.stream.events,javax.xml.transform"; version="${detect.java.version}", \
 javax.xml.transform.stream; uses:="javax.xml.transform"; version="${detect.java.version}", \
 javax.xml.validation; uses:="javax.xml.transform,javax.xml.transform.stream,org.w3c.dom,org.w3c.dom.ls,org.xml.sax"; version="${detect.java.version}", \
 javax.xml.ws; uses:="javax.xml.bind,javax.xml.bind.annotation,javax.xml.namespace,javax.xml.transform,javax.xml.transform.stream,javax.xml.ws.handler,javax.xml.ws.spi,javax.xml.ws.spi.http,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.ws.handler; uses:="javax.xml.namespace,javax.xml.ws"; version="${detect.java.version}", \
 javax.xml.ws.handler.soap; uses:="javax.xml.bind,javax.xml.namespace,javax.xml.soap,javax.xml.ws.handler"; version="${detect.java.version}", \
 javax.xml.ws.http; uses:="javax.xml.ws"; version="${detect.java.version}", \
 javax.xml.ws.soap; uses:="javax.xml.soap,javax.xml.ws,javax.xml.ws.spi"; version="${detect.java.version}", \
 javax.xml.ws.spi; uses:="javax.xml.bind,javax.xml.namespace,javax.xml.transform,javax.xml.ws,javax.xml.ws.handler,javax.xml.ws.wsaddressing,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.ws.spi.http; version="${detect.java.version}", \
 javax.xml.ws.wsaddressing; uses:="javax.xml.bind,javax.xml.bind.annotation,javax.xml.namespace,javax.xml.transform,javax.xml.ws,javax.xml.ws.spi,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.xpath; uses:="javax.xml.namespace,org.xml.sax"; version="${detect.java.version}", \
 org.ietf.jgss; version="${detect.java.version}", \
 org.omg.CORBA; uses:="org.omg.CORBA.DynAnyPackage,org.omg.CORBA.ORBPackage,org.omg.CORBA.TypeCodePackage,org.omg.CORBA.portable,org.omg.CORBA_2_3.portable"; version="${detect.java.version}", \
 org.omg.CORBA.DynAnyPackage; uses:="org.omg.CORBA"; version="${detect.java.version}", \
 org.omg.CORBA.ORBPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.CORBA.TypeCodePackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.CORBA.portable; uses:="org.omg.CORBA,org.omg.CORBA_2_3.portable"; version="${detect.java.version}", \
 org.omg.CORBA_2_3; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.CORBA_2_3.portable; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.CosNaming; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.CosNaming.NamingContextExtPackage,org.omg.CosNaming.NamingContextPackage,org.omg.PortableServer"; version="${detect.java.version}", \
 org.omg.CosNaming.NamingContextExtPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.CosNaming.NamingContextPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.CosNaming"; version="${detect.java.version}", \
 org.omg.Dynamic; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.DynamicAny; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.DynamicAny.DynAnyFactoryPackage,org.omg.DynamicAny.DynAnyPackage"; version="${detect.java.version}", \
 org.omg.DynamicAny.DynAnyFactoryPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.DynamicAny.DynAnyPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.IOP; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.IOP.CodecFactoryPackage,org.omg.IOP.CodecPackage"; version="${detect.java.version}", \
 org.omg.IOP.CodecFactoryPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.IOP.CodecPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.Messaging; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableInterceptor; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.CORBA_2_3.portable,org.omg.Dynamic,org.omg.IOP,org.omg.PortableInterceptor.ORBInitInfoPackage"; version="${detect.java.version}", \
 org.omg.PortableInterceptor.ORBInitInfoPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableServer; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.CORBA_2_3,org.omg.PortableServer.CurrentPackage,org.omg.PortableServer.POAManagerPackage,org.omg.PortableServer.POAPackage,org.omg.PortableServer.ServantLocatorPackage,org.omg.PortableServer.portable"; version="${detect.java.version}", \
 org.omg.PortableServer.CurrentPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableServer.POAManagerPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableServer.POAPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableServer.ServantLocatorPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableServer.portable; uses:="org.omg.CORBA,org.omg.PortableServer"; version="${detect.java.version}", \
 org.omg.SendingContext; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.stub.java.rmi; uses:="javax.rmi.CORBA"; version="${detect.java.version}", \
 org.w3c.dom; version="${detect.java.version}", \
 org.w3c.dom.bootstrap; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.ls; uses:="org.w3c.dom,org.w3c.dom.events"; version="${detect.java.version}", \
 org.w3c.dom.events; uses:="org.w3c.dom,org.w3c.dom.views"; version="${detect.java.version}", \
 org.w3c.dom.views; version="${detect.java.version}", \
 org.w3c.dom.traversal; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.ranges; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.css; uses:="org.w3c.dom,org.w3c.dom.stylesheets,org.w3c.dom.views"; version="${detect.java.version}", \
 org.w3c.dom.html; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.stylesheets; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.xpath; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.xml.sax; version="${detect.java.version}", \
 org.xml.sax.ext; uses:="org.xml.sax,org.xml.sax.helpers"; version="${detect.java.version}", \
 org.xml.sax.helpers; uses:="org.xml.sax"; version="${detect.java.version}"

# Structured from Felix 6.0.3 default.properties for jre-1.8.
# Modified entries based on manual Felix 6.0.3 "felix:headers" operation under Java 8.
jre-1.8=, \
 java.applet; version="${detect.java.version}", \
 java.awt; version="${detect.java.version}", \
 java.awt.color; version="${detect.java.version}", \
 java.awt.datatransfer; version="${detect.java.version}", \
 java.awt.dnd; version="${detect.java.version}", \
 java.awt.event; version="${detect.java.version}", \
 java.awt.font; version="${detect.java.version}", \
 java.awt.geom; version="${detect.java.version}", \
 java.awt.im; version="${detect.java.version}", \
 java.awt.im.spi; version="${detect.java.version}", \
 java.awt.image; version="${detect.java.version}", \
 java.awt.image.renderable; version="${detect.java.version}", \
 java.awt.print; version="${detect.java.version}", \
 java.beans; version="${detect.java.version}", \
 java.beans.beancontext; version="${detect.java.version}", \
 java.io; version="${detect.java.version}", \
 java.lang; version="${detect.java.version}", \
 java.lang.annotation; version="${detect.java.version}", \
 java.lang.instrument; version="${detect.java.version}", \
 java.lang.invoke; version="${detect.java.version}", \
 java.lang.management; version="${detect.java.version}", \
 java.lang.ref; version="${detect.java.version}", \
 java.lang.reflect; version="${detect.java.version}", \
 java.math; version="${detect.java.version}", \
 java.net; version="${detect.java.version}", \
 java.nio; version="${detect.java.version}", \
 java.nio.channels; version="${detect.java.version}", \
 java.nio.channels.spi; version="${detect.java.version}", \
 java.nio.charset; version="${detect.java.version}", \
 java.nio.charset.spi; version="${detect.java.version}", \
 java.nio.file; version="${detect.java.version}", \
 java.nio.file.attribute; version="${detect.java.version}", \
 java.nio.file.spi; version="${detect.java.version}", \
 java.rmi; version="${detect.java.version}", \
 java.rmi.activation; version="${detect.java.version}", \
 java.rmi.dgc; version="${detect.java.version}", \
 java.rmi.registry; version="${detect.java.version}", \
 java.rmi.server; version="${detect.java.version}", \
 java.security; version="${detect.java.version}", \
 java.security.acl; version="${detect.java.version}", \
 java.security.cert; version="${detect.java.version}", \
 java.security.interfaces; version="${detect.java.version}", \
 java.security.spec; version="${detect.java.version}", \
 java.sql; version="${detect.java.version}", \
 java.text; version="${detect.java.version}", \
 java.text.spi; version="${detect.java.version}", \
 java.time; version="${detect.java.version}", \
 java.time.chrono; version="${detect.java.version}", \
 java.time.format; version="${detect.java.version}", \
 java.time.temporal; version="${detect.java.version}", \
 java.time.zone; version="${detect.java.version}", \
 java.util; version="${detect.java.version}", \
 java.util.concurrent; version="${detect.java.version}", \
 java.util.concurrent.atomic; version="${detect.java.version}", \
 java.util.concurrent.locks; version="${detect.java.version}", \
 java.util.function; version="${detect.java.version}", \
 java.util.jar; version="${detect.java.version}", \
 java.util.logging; version="${detect.java.version}", \
 java.util.prefs; version="${detect.java.version}", \
 java.util.regex; version="${detect.java.version}", \
 java.util.spi; version="${detect.java.version}", \
 java.util.stream; version="${detect.java.version}", \
 java.util.zip; version="${detect.java.version}", \
 javax.accessibility; uses:="javax.swing.text"; version="${detect.java.version}", \
 javax.activation; version="${detect.java.version}", \
 javax.activity; version="${detect.java.version}", \
 javax.annotation; version="${detect.java.version}", \
 javax.annotation.processing; uses:="javax.lang.model,javax.lang.model.element,javax.lang.model.util,javax.tools"; version="${detect.java.version}", \
 javax.crypto; uses:="javax.crypto.spec,javax.security.auth"; version="${detect.java.version}", \
 javax.crypto.interfaces; uses:="javax.crypto,javax.crypto.spec"; version="${detect.java.version}", \
 javax.crypto.spec; uses:="javax.crypto"; version="${detect.java.version}", \
 javax.imageio; uses:="javax.imageio.event,javax.imageio.metadata,javax.imageio.spi,javax.imageio.stream"; version="${detect.java.version}", \
 javax.imageio.event; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.imageio.metadata; uses:="javax.imageio,org.w3c.dom"; version="${detect.java.version}", \
 javax.imageio.plugins.bmp; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.imageio.plugins.jpeg; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.imageio.spi; uses:="javax.imageio,javax.imageio.metadata,javax.imageio.stream"; version="${detect.java.version}", \
 javax.imageio.stream; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.jws; version="${detect.java.version}", \
 javax.jws.soap; version="${detect.java.version}", \
 javax.lang.model; uses:="javax.lang.model.element"; version="${detect.java.version}", \
 javax.lang.model.element; uses:="javax.lang.model,javax.lang.model.type"; version="${detect.java.version}", \
 javax.lang.model.type; uses:="javax.lang.model,javax.lang.model.element"; version="${detect.java.version}", \
 javax.lang.model.util; uses:="javax.annotation.processing,javax.lang.model,javax.lang.model.element,javax.lang.model.type"; version="${detect.java.version}", \
 javax.management; uses:="javax.management.loading,javax.management.openmbean"; version="${detect.java.version}", \
 javax.management.loading; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.modelmbean; uses:="javax.management,javax.management.loading"; version="${detect.java.version}", \
 javax.management.monitor; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.openmbean; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.relation; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.remote; uses:="javax.management,javax.security.auth"; version="${detect.java.version}", \
 javax.management.remote.rmi; uses:="javax.management,javax.management.loading,javax.management.remote,javax.naming,javax.rmi,javax.rmi.CORBA,javax.rmi.ssl,javax.security.auth,org.omg.CORBA,org.omg.CORBA.portable,org.omg.CORBA_2_3.portable"; version="${detect.java.version}", \
 javax.management.timer; uses:="javax.management"; version="${detect.java.version}", \
 javax.naming; uses:="javax.naming.spi"; version="${detect.java.version}", \
 javax.naming.directory; uses:="javax.naming"; version="${detect.java.version}", \
 javax.naming.event; uses:="javax.naming,javax.naming.directory"; version="${detect.java.version}", \
 javax.naming.ldap; uses:="javax.naming,javax.naming.directory,javax.naming.event,javax.net.ssl"; version="${detect.java.version}", \
 javax.naming.spi; uses:="javax.naming,javax.naming.directory"; version="${detect.java.version}", \
 javax.net; version="${detect.java.version}", \
 javax.net.ssl; uses:="javax.net,javax.security.auth.x500,javax.security.cert"; version="${detect.java.version}", \
 javax.print; uses:="javax.print.attribute,javax.print.attribute.standard,javax.print.event"; version="${detect.java.version}", \
 javax.print.attribute; version="${detect.java.version}", \
 javax.print.attribute.standard; uses:="javax.print.attribute"; version="${detect.java.version}", \
 javax.print.event; uses:="javax.print,javax.print.attribute"; version="${detect.java.version}", \
 javax.rmi; uses:="javax.rmi.CORBA,org.omg.CORBA"; version="${detect.java.version}", \
 javax.rmi.CORBA; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.CORBA_2_3.portable,org.omg.SendingContext"; version="${detect.java.version}", \
 javax.rmi.ssl; uses:="javax.net,javax.net.ssl"; version="${detect.java.version}", \
 javax.script; version="${detect.java.version}", \
 javax.security.auth; version="${detect.java.version}", \
 javax.security.auth.callback; version="${detect.java.version}", \
 javax.security.auth.kerberos; uses:="javax.crypto,javax.security.auth"; version="${detect.java.version}", \
 javax.security.auth.login; uses:="javax.security.auth,javax.security.auth.callback"; version="${detect.java.version}", \
 javax.security.auth.spi; uses:="javax.security.auth,javax.security.auth.callback,javax.security.auth.login"; version="${detect.java.version}", \
 javax.security.auth.x500; uses:="javax.security.auth"; version="${detect.java.version}", \
 javax.security.cert; version="${detect.java.version}", \
 javax.security.sasl; uses:="javax.security.auth.callback"; version="${detect.java.version}", \
 javax.sound.midi; uses:="javax.sound.midi.spi"; version="${detect.java.version}", \
 javax.sound.midi.spi; uses:="javax.sound.midi"; version="${detect.java.version}", \
 javax.sound.sampled; uses:="javax.sound.sampled.spi"; version="${detect.java.version}", \
 javax.sound.sampled.spi; uses:="javax.sound.sampled"; version="${detect.java.version}", \
 javax.sql; uses:="javax.transaction.xa"; version="${detect.java.version}", \
 javax.sql.rowset; uses:="javax.sql,javax.sql.rowset.serial,javax.sql.rowset.spi"; version="${detect.java.version}", \
 javax.sql.rowset.serial; uses:="javax.sql.rowset"; version="${detect.java.version}", \
 javax.sql.rowset.spi; uses:="javax.naming,javax.sql,javax.sql.rowset"; version="${detect.java.version}", \
 javax.swing; uses:="javax.accessibility,javax.print,javax.print.attribute,javax.swing.border,javax.swing.colorchooser,javax.swing.event,javax.swing.filechooser,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.plaf.metal,javax.swing.table,javax.swing.text,javax.swing.text.html,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.border; uses:="javax.swing"; version="${detect.java.version}", \
 javax.swing.colorchooser; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.event,javax.swing.text"; version="${detect.java.version}", \
 javax.swing.event; uses:="javax.swing,javax.swing.table,javax.swing.text,javax.swing.tree,javax.swing.undo"; version="${detect.java.version}", \
 javax.swing.filechooser; uses:="javax.swing"; version="${detect.java.version}", \
 javax.swing.plaf; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.filechooser,javax.swing.text,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.basic; uses:="javax.accessibility,javax.sound.sampled,javax.swing,javax.swing.border,javax.swing.colorchooser,javax.swing.event,javax.swing.filechooser,javax.swing.plaf,javax.swing.plaf.synth,javax.swing.table,javax.swing.text,javax.swing.text.html,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.nimbus; uses:="javax.swing,javax.swing.border,javax.swing.plaf,javax.swing.plaf.synth"; version="${detect.java.version}", \
 javax.swing.plaf.metal; uses:="javax.swing,javax.swing.border,javax.swing.event,javax.swing.filechooser,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.text,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.multi; uses:="javax.accessibility,javax.swing,javax.swing.filechooser,javax.swing.plaf,javax.swing.text,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.synth; uses:="javax.swing,javax.swing.border,javax.swing.colorchooser,javax.swing.event,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.table,javax.swing.text,javax.swing.tree,javax.xml.parsers,org.xml.sax,org.xml.sax.helpers"; version="${detect.java.version}", \
 javax.swing.table; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.event,javax.swing.plaf"; version="${detect.java.version}", \
 javax.swing.text; uses:="javax.accessibility,javax.print,javax.print.attribute,javax.swing,javax.swing.event,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.text.html,javax.swing.tree,javax.swing.undo"; version="${detect.java.version}", \
 javax.swing.text.html; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.event,javax.swing.plaf,javax.swing.text,javax.swing.undo"; version="${detect.java.version}", \
 javax.swing.text.html.parser; uses:="javax.swing.text,javax.swing.text.html"; version="${detect.java.version}", \
 javax.swing.text.rtf; uses:="javax.swing.text"; version="${detect.java.version}", \
 javax.swing.tree; uses:="javax.swing,javax.swing.border,javax.swing.event,javax.swing.plaf,javax.swing.plaf.basic"; version="${detect.java.version}", \
 javax.swing.undo; uses:="javax.swing,javax.swing.event"; version="${detect.java.version}", \
 javax.tools; uses:="javax.annotation.processing,javax.lang.model,javax.lang.model.element"; version="${detect.java.version}", \
 javax.transaction; version="${detect.java.version}", \
 javax.transaction.xa; version="${detect.java.version}", \
 javax.xml; version="${detect.java.version}", \
 javax.xml.bind; uses:="javax.xml.bind.annotation,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.datatype,javax.xml.namespace,javax.xml.stream,javax.xml.transform,javax.xml.transform.stream,javax.xml.validation,org.w3c.dom,org.xml.sax"; version="${detect.java.version}", \
 javax.xml.bind.annotation; uses:="javax.xml.bind,javax.xml.parsers,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.bind.annotation.adapters; uses:="javax.xml.bind"; version="${detect.java.version}", \
 javax.xml.bind.attachment; uses:="javax.activation"; version="${detect.java.version}", \
 javax.xml.bind.helpers; uses:="javax.xml.bind,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.parsers,javax.xml.stream,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,javax.xml.transform.stream,javax.xml.validation,org.w3c.dom,org.xml.sax"; version="${detect.java.version}", \
 javax.xml.bind.util; uses:="javax.xml.bind,javax.xml.transform.sax,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers"; version="${detect.java.version}", \
 javax.xml.crypto; uses:="javax.xml.crypto.dsig.keyinfo"; version="${detect.java.version}", \
 javax.xml.crypto.dom; uses:="javax.xml.crypto,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.crypto.dsig; uses:="javax.xml.crypto,javax.xml.crypto.dsig.keyinfo,javax.xml.crypto.dsig.spec"; version="${detect.java.version}", \
 javax.xml.crypto.dsig.dom; uses:="javax.xml.crypto,javax.xml.crypto.dom,javax.xml.crypto.dsig,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.crypto.dsig.keyinfo; uses:="javax.xml.crypto"; version="${detect.java.version}", \
 javax.xml.crypto.dsig.spec; uses:="javax.xml.crypto"; version="${detect.java.version}", \
 javax.xml.datatype; uses:="javax.xml.namespace"; version="${detect.java.version}", \
 javax.xml.namespace; version="${detect.java.version}", \
 javax.xml.parsers; uses:="javax.xml.validation,org.w3c.dom,org.xml.sax,org.xml.sax.helpers"; version="${detect.java.version}", \
 javax.xml.soap; uses:="javax.activation,javax.xml.namespace,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.stream; uses:="javax.xml.namespace,javax.xml.stream.events,javax.xml.stream.util,javax.xml.transform"; version="${detect.java.version}", \
 javax.xml.stream.events; uses:="javax.xml.namespace,javax.xml.stream"; version="${detect.java.version}", \
 javax.xml.stream.util; uses:="javax.xml.namespace,javax.xml.stream,javax.xml.stream.events"; version="${detect.java.version}", \
 javax.xml.transform; version="${detect.java.version}", \
 javax.xml.transform.dom; uses:="javax.xml.transform,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.transform.sax; uses:="javax.xml.transform,javax.xml.transform.stream,org.xml.sax,org.xml.sax.ext"; version="${detect.java.version}", \
 javax.xml.transform.stax; uses:="javax.xml.stream,javax.xml.stream.events,javax.xml.transform"; version="${detect.java.version}", \
 javax.xml.transform.stream; uses:="javax.xml.transform"; version="${detect.java.version}", \
 javax.xml.validation; uses:="javax.xml.transform,javax.xml.transform.stream,org.w3c.dom,org.w3c.dom.ls,org.xml.sax"; version="${detect.java.version}", \
 javax.xml.ws; uses:="javax.xml.bind,javax.xml.bind.annotation,javax.xml.namespace,javax.xml.transform,javax.xml.transform.stream,javax.xml.ws.handler,javax.xml.ws.spi,javax.xml.ws.spi.http,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.ws.handler; uses:="javax.xml.namespace,javax.xml.ws"; version="${detect.java.version}", \
 javax.xml.ws.handler.soap; uses:="javax.xml.bind,javax.xml.namespace,javax.xml.soap,javax.xml.ws.handler"; version="${detect.java.version}", \
 javax.xml.ws.http; uses:="javax.xml.ws"; version="${detect.java.version}", \
 javax.xml.ws.soap; uses:="javax.xml.soap,javax.xml.ws,javax.xml.ws.spi"; version="${detect.java.version}", \
 javax.xml.ws.spi; uses:="javax.xml.bind,javax.xml.namespace,javax.xml.transform,javax.xml.ws,javax.xml.ws.handler,javax.xml.ws.wsaddressing,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.ws.spi.http; version="${detect.java.version}", \
 javax.xml.ws.wsaddressing; uses:="javax.xml.bind,javax.xml.bind.annotation,javax.xml.namespace,javax.xml.transform,javax.xml.ws,javax.xml.ws.spi,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.xpath; uses:="javax.xml.namespace,org.xml.sax"; version="${detect.java.version}", \
 org.ietf.jgss; version="${detect.java.version}", \
 org.omg.CORBA; uses:="org.omg.CORBA.DynAnyPackage,org.omg.CORBA.ORBPackage,org.omg.CORBA.TypeCodePackage,org.omg.CORBA.portable,org.omg.CORBA_2_3.portable"; version="${detect.java.version}", \
 org.omg.CORBA.DynAnyPackage; uses:="org.omg.CORBA"; version="${detect.java.version}", \
 org.omg.CORBA.ORBPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.CORBA.TypeCodePackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.CORBA.portable; uses:="org.omg.CORBA,org.omg.CORBA_2_3.portable"; version="${detect.java.version}", \
 org.omg.CORBA_2_3; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.CORBA_2_3.portable; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.CosNaming; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.CosNaming.NamingContextExtPackage,org.omg.CosNaming.NamingContextPackage,org.omg.PortableServer"; version="${detect.java.version}", \
 org.omg.CosNaming.NamingContextExtPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.CosNaming.NamingContextPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.CosNaming"; version="${detect.java.version}", \
 org.omg.Dynamic; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.DynamicAny; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.DynamicAny.DynAnyFactoryPackage,org.omg.DynamicAny.DynAnyPackage"; version="${detect.java.version}", \
 org.omg.DynamicAny.DynAnyFactoryPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.DynamicAny.DynAnyPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.IOP; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.IOP.CodecFactoryPackage,org.omg.IOP.CodecPackage"; version="${detect.java.version}", \
 org.omg.IOP.CodecFactoryPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.IOP.CodecPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.Messaging; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableInterceptor; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.CORBA_2_3.portable,org.omg.Dynamic,org.omg.IOP,org.omg.PortableInterceptor.ORBInitInfoPackage"; version="${detect.java.version}", \
 org.omg.PortableInterceptor.ORBInitInfoPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableServer; uses:="org.omg.CORBA,org.omg.CORBA.portable,org.omg.CORBA_2_3,org.omg.PortableServer.CurrentPackage,org.omg.PortableServer.POAManagerPackage,org.omg.PortableServer.POAPackage,org.omg.PortableServer.ServantLocatorPackage,org.omg.PortableServer.portable"; version="${detect.java.version}", \
 org.omg.PortableServer.CurrentPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableServer.POAManagerPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableServer.POAPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableServer.ServantLocatorPackage; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.PortableServer.portable; uses:="org.omg.CORBA,org.omg.PortableServer"; version="${detect.java.version}", \
 org.omg.SendingContext; uses:="org.omg.CORBA,org.omg.CORBA.portable"; version="${detect.java.version}", \
 org.omg.stub.java.rmi; uses:="javax.rmi.CORBA"; version="${detect.java.version}", \
 org.w3c.dom; version="${detect.java.version}", \
 org.w3c.dom.bootstrap; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.ls; uses:="org.w3c.dom,org.w3c.dom.events"; version="${detect.java.version}", \
 org.w3c.dom.events; uses:="org.w3c.dom,org.w3c.dom.views"; version="${detect.java.version}", \
 org.w3c.dom.views; version="${detect.java.version}", \
 org.w3c.dom.traversal; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.ranges; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.css; uses:="org.w3c.dom,org.w3c.dom.stylesheets,org.w3c.dom.views"; version="${detect.java.version}", \
 org.w3c.dom.html; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.stylesheets; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.xpath; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.xml.sax; version="${detect.java.version}", \
 org.xml.sax.ext; uses:="org.xml.sax,org.xml.sax.helpers"; version="${detect.java.version}", \
 org.xml.sax.helpers; uses:="org.xml.sax"; version="${detect.java.version}"

# Almost Empty for Java 9 (fill in if using).
jre-9.0=, \
java.lang; version="${detect.java.version}"

# Almost Empty for Java 10 (fill in if using).
# Not provided
jre-10.0=, \
java.lang; version="${detect.java.version}"

# Copy of jre-1.8 from Felix 6.0.3 default.properties, as no equivalent entry for jre-11.0 exists.
# Modified entries based on manual Felix 6.0.3 "felix:headers" operation under Java 11.
jre-11.0=, \
 java.applet; version="${detect.java.version}", \
 java.awt; version="${detect.java.version}", \
 java.awt.color; version="${detect.java.version}", \
 java.awt.datatransfer; version="${detect.java.version}", \
 java.awt.desktop; version="${detect.java.version}", \
 java.awt.dnd; version="${detect.java.version}", \
 java.awt.event; version="${detect.java.version}", \
 java.awt.font; version="${detect.java.version}", \
 java.awt.geom; version="${detect.java.version}", \
 java.awt.im; version="${detect.java.version}", \
 java.awt.im.spi; version="${detect.java.version}", \
 java.awt.image; version="${detect.java.version}", \
 java.awt.image.renderable; version="${detect.java.version}", \
 java.awt.print; version="${detect.java.version}", \
 java.beans; version="${detect.java.version}", \
 java.beans.beancontext; version="${detect.java.version}", \
 java.io; version="${detect.java.version}", \
 java.lang; version="${detect.java.version}", \
 java.lang.annotation; version="${detect.java.version}", \
 java.lang.instrument; version="${detect.java.version}", \
 java.lang.invoke; version="${detect.java.version}", \
 java.lang.management; version="${detect.java.version}", \
 java.lang.module; version="${detect.java.version}", \
 java.lang.ref; version="${detect.java.version}", \
 java.lang.reflect; version="${detect.java.version}", \
 java.math; version="${detect.java.version}", \
 java.net; version="${detect.java.version}", \
 java.net.http; version="${detect.java.version}", \
 java.net.spi; version="${detect.java.version}", \
 java.nio; version="${detect.java.version}", \
 java.nio.channels; version="${detect.java.version}", \
 java.nio.channels.spi; version="${detect.java.version}", \
 java.nio.charset; version="${detect.java.version}", \
 java.nio.charset.spi; version="${detect.java.version}", \
 java.nio.file; version="${detect.java.version}", \
 java.nio.file.attribute; version="${detect.java.version}", \
 java.nio.file.spi; version="${detect.java.version}", \
 java.rmi; version="${detect.java.version}", \
 java.rmi.activation; version="${detect.java.version}", \
 java.rmi.dgc; version="${detect.java.version}", \
 java.rmi.registry; version="${detect.java.version}", \
 java.rmi.server; version="${detect.java.version}", \
 java.security; version="${detect.java.version}", \
 java.security.acl; version="${detect.java.version}", \
 java.security.cert; version="${detect.java.version}", \
 java.security.interfaces; version="${detect.java.version}", \
 java.security.spec; version="${detect.java.version}", \
 java.sql; version="${detect.java.version}", \
 java.text; version="${detect.java.version}", \
 java.text.spi; version="${detect.java.version}", \
 java.time; version="${detect.java.version}", \
 java.time.chrono; version="${detect.java.version}", \
 java.time.format; version="${detect.java.version}", \
 java.time.temporal; version="${detect.java.version}", \
 java.time.zone; version="${detect.java.version}", \
 java.util; version="${detect.java.version}", \
 java.util.concurrent; version="${detect.java.version}", \
 java.util.concurrent.atomic; version="${detect.java.version}", \
 java.util.concurrent.locks; version="${detect.java.version}", \
 java.util.function; version="${detect.java.version}", \
 java.util.jar; version="${detect.java.version}", \
 java.util.logging; version="${detect.java.version}", \
 java.util.prefs; version="${detect.java.version}", \
 java.util.regex; version="${detect.java.version}", \
 java.util.spi; version="${detect.java.version}", \
 java.util.stream; version="${detect.java.version}", \
 java.util.zip; version="${detect.java.version}", \
 javax.accessibility; uses:="javax.swing.text"; version="${detect.java.version}", \
 javax.annotation.processing; uses:="javax.lang.model,javax.lang.model.element,javax.lang.model.util,javax.tools"; version="${detect.java.version}", \
 javax.crypto; uses:="javax.crypto.spec,javax.security.auth"; version="${detect.java.version}", \
 javax.crypto.interfaces; uses:="javax.crypto,javax.crypto.spec"; version="${detect.java.version}", \
 javax.crypto.spec; uses:="javax.crypto"; version="${detect.java.version}", \
 javax.imageio; uses:="javax.imageio.event,javax.imageio.metadata,javax.imageio.spi,javax.imageio.stream"; version="${detect.java.version}", \
 javax.imageio.event; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.imageio.metadata; uses:="javax.imageio,org.w3c.dom"; version="${detect.java.version}", \
 javax.imageio.plugins.bmp; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.imageio.plugins.jpeg; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.imageio.plugins.tiff; version="${detect.java.version}", \
 javax.imageio.spi; uses:="javax.imageio,javax.imageio.metadata,javax.imageio.stream"; version="${detect.java.version}", \
 javax.imageio.stream; uses:="javax.imageio"; version="${detect.java.version}", \
 javax.lang.model; uses:="javax.lang.model.element"; version="${detect.java.version}", \
 javax.lang.model.element; uses:="javax.lang.model,javax.lang.model.type"; version="${detect.java.version}", \
 javax.lang.model.type; uses:="javax.lang.model,javax.lang.model.element"; version="${detect.java.version}", \
 javax.lang.model.util; uses:="javax.annotation.processing,javax.lang.model,javax.lang.model.element,javax.lang.model.type"; version="${detect.java.version}", \
 javax.management; uses:="javax.management.loading,javax.management.openmbean"; version="${detect.java.version}", \
 javax.management.loading; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.modelmbean; uses:="javax.management,javax.management.loading"; version="${detect.java.version}", \
 javax.management.monitor; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.openmbean; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.relation; uses:="javax.management"; version="${detect.java.version}", \
 javax.management.remote; uses:="javax.management,javax.security.auth"; version="${detect.java.version}", \
 javax.management.remote.rmi; uses:="javax.management,javax.management.loading,javax.management.remote,javax.naming,javax.rmi,javax.rmi.CORBA,javax.rmi.ssl,javax.security.auth,org.omg.CORBA,org.omg.CORBA.portable,org.omg.CORBA_2_3.portable"; version="${detect.java.version}", \
 javax.management.timer; uses:="javax.management"; version="${detect.java.version}", \
 javax.naming; uses:="javax.naming.spi"; version="${detect.java.version}", \
 javax.naming.directory; uses:="javax.naming"; version="${detect.java.version}", \
 javax.naming.event; uses:="javax.naming,javax.naming.directory"; version="${detect.java.version}", \
 javax.naming.ldap; uses:="javax.naming,javax.naming.directory,javax.naming.event,javax.net.ssl"; version="${detect.java.version}", \
 javax.naming.spi; uses:="javax.naming,javax.naming.directory"; version="${detect.java.version}", \
 javax.net; version="${detect.java.version}", \
 javax.net.ssl; uses:="javax.net,javax.security.auth.x500,javax.security.cert"; version="${detect.java.version}", \
 javax.print; uses:="javax.print.attribute,javax.print.attribute.standard,javax.print.event"; version="${detect.java.version}", \
 javax.print.attribute; version="${detect.java.version}", \
 javax.print.attribute.standard; uses:="javax.print.attribute"; version="${detect.java.version}", \
 javax.print.event; uses:="javax.print,javax.print.attribute"; version="${detect.java.version}", \
 javax.rmi; uses:="javax.rmi.CORBA,org.omg.CORBA"; version="${detect.java.version}", \
 javax.rmi.ssl; uses:="javax.net,javax.net.ssl"; version="${detect.java.version}", \
 javax.script; version="${detect.java.version}", \
 javax.security.auth; version="${detect.java.version}", \
 javax.security.auth.callback; version="${detect.java.version}", \
 javax.security.auth.kerberos; uses:="javax.crypto,javax.security.auth"; version="${detect.java.version}", \
 javax.security.auth.login; uses:="javax.security.auth,javax.security.auth.callback"; version="${detect.java.version}", \
 javax.security.auth.spi; uses:="javax.security.auth,javax.security.auth.callback,javax.security.auth.login"; version="${detect.java.version}", \
 javax.security.auth.x500; uses:="javax.security.auth"; version="${detect.java.version}", \
 javax.security.cert; version="${detect.java.version}", \
 javax.security.sasl; uses:="javax.security.auth.callback"; version="${detect.java.version}", \
 javax.sound.midi; uses:="javax.sound.midi.spi"; version="${detect.java.version}", \
 javax.sound.midi.spi; uses:="javax.sound.midi"; version="${detect.java.version}", \
 javax.sound.sampled; uses:="javax.sound.sampled.spi"; version="${detect.java.version}", \
 javax.sound.sampled.spi; uses:="javax.sound.sampled"; version="${detect.java.version}", \
 javax.sql; uses:="javax.transaction.xa"; version="${detect.java.version}", \
 javax.sql.rowset; uses:="javax.sql,javax.sql.rowset.serial,javax.sql.rowset.spi"; version="${detect.java.version}", \
 javax.sql.rowset.serial; uses:="javax.sql.rowset"; version="${detect.java.version}", \
 javax.sql.rowset.spi; uses:="javax.naming,javax.sql,javax.sql.rowset"; version="${detect.java.version}", \
 javax.swing; uses:="javax.accessibility,javax.print,javax.print.attribute,javax.swing.border,javax.swing.colorchooser,javax.swing.event,javax.swing.filechooser,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.plaf.metal,javax.swing.table,javax.swing.text,javax.swing.text.html,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.border; uses:="javax.swing"; version="${detect.java.version}", \
 javax.swing.colorchooser; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.event,javax.swing.text"; version="${detect.java.version}", \
 javax.swing.event; uses:="javax.swing,javax.swing.table,javax.swing.text,javax.swing.tree,javax.swing.undo"; version="${detect.java.version}", \
 javax.swing.filechooser; uses:="javax.swing"; version="${detect.java.version}", \
 javax.swing.plaf; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.filechooser,javax.swing.text,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.basic; uses:="javax.accessibility,javax.sound.sampled,javax.swing,javax.swing.border,javax.swing.colorchooser,javax.swing.event,javax.swing.filechooser,javax.swing.plaf,javax.swing.plaf.synth,javax.swing.table,javax.swing.text,javax.swing.text.html,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.nimbus; uses:="javax.swing,javax.swing.border,javax.swing.plaf,javax.swing.plaf.synth"; version="${detect.java.version}", \
 javax.swing.plaf.metal; uses:="javax.swing,javax.swing.border,javax.swing.event,javax.swing.filechooser,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.text,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.multi; uses:="javax.accessibility,javax.swing,javax.swing.filechooser,javax.swing.plaf,javax.swing.text,javax.swing.tree"; version="${detect.java.version}", \
 javax.swing.plaf.synth; uses:="javax.swing,javax.swing.border,javax.swing.colorchooser,javax.swing.event,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.table,javax.swing.text,javax.swing.tree,javax.xml.parsers,org.xml.sax,org.xml.sax.helpers"; version="${detect.java.version}", \
 javax.swing.table; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.event,javax.swing.plaf"; version="${detect.java.version}", \
 javax.swing.text; uses:="javax.accessibility,javax.print,javax.print.attribute,javax.swing,javax.swing.event,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.text.html,javax.swing.tree,javax.swing.undo"; version="${detect.java.version}", \
 javax.swing.text.html; uses:="javax.accessibility,javax.swing,javax.swing.border,javax.swing.event,javax.swing.plaf,javax.swing.text,javax.swing.undo"; version="${detect.java.version}", \
 javax.swing.text.html.parser; uses:="javax.swing.text,javax.swing.text.html"; version="${detect.java.version}", \
 javax.swing.text.rtf; uses:="javax.swing.text"; version="${detect.java.version}", \
 javax.swing.tree; uses:="javax.swing,javax.swing.border,javax.swing.event,javax.swing.plaf,javax.swing.plaf.basic"; version="${detect.java.version}", \
 javax.swing.undo; uses:="javax.swing,javax.swing.event"; version="${detect.java.version}", \
 javax.tools; uses:="javax.annotation.processing,javax.lang.model,javax.lang.model.element"; version="${detect.java.version}", \
 javax.transaction.xa; version="${detect.java.version}", \
 javax.xml; version="${detect.java.version}", \
 javax.xml.catalog; version="${detect.java.version}", \
 javax.xml.crypto; uses:="javax.xml.crypto.dsig.keyinfo"; version="${detect.java.version}", \
 javax.xml.crypto.dom; uses:="javax.xml.crypto,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.crypto.dsig; uses:="javax.xml.crypto,javax.xml.crypto.dsig.keyinfo,javax.xml.crypto.dsig.spec"; version="${detect.java.version}", \
 javax.xml.crypto.dsig.dom; uses:="javax.xml.crypto,javax.xml.crypto.dom,javax.xml.crypto.dsig,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.crypto.dsig.keyinfo; uses:="javax.xml.crypto"; version="${detect.java.version}", \
 javax.xml.crypto.dsig.spec; uses:="javax.xml.crypto"; version="${detect.java.version}", \
 javax.xml.datatype; uses:="javax.xml.namespace"; version="${detect.java.version}", \
 javax.xml.namespace; version="${detect.java.version}", \
 javax.xml.parsers; uses:="javax.xml.validation,org.w3c.dom,org.xml.sax,org.xml.sax.helpers"; version="${detect.java.version}", \
 javax.xml.stream; uses:="javax.xml.namespace,javax.xml.stream.events,javax.xml.stream.util,javax.xml.transform"; version="${detect.java.version}", \
 javax.xml.stream.events; uses:="javax.xml.namespace,javax.xml.stream"; version="${detect.java.version}", \
 javax.xml.stream.util; uses:="javax.xml.namespace,javax.xml.stream,javax.xml.stream.events"; version="${detect.java.version}", \
 javax.xml.transform; version="${detect.java.version}", \
 javax.xml.transform.dom; uses:="javax.xml.transform,org.w3c.dom"; version="${detect.java.version}", \
 javax.xml.transform.sax; uses:="javax.xml.transform,javax.xml.transform.stream,org.xml.sax,org.xml.sax.ext"; version="${detect.java.version}", \
 javax.xml.transform.stax; uses:="javax.xml.stream,javax.xml.stream.events,javax.xml.transform"; version="${detect.java.version}", \
 javax.xml.transform.stream; uses:="javax.xml.transform"; version="${detect.java.version}", \
 javax.xml.validation; uses:="javax.xml.transform,javax.xml.transform.stream,org.w3c.dom,org.w3c.dom.ls,org.xml.sax"; version="${detect.java.version}", \
 javax.xml.xpath; uses:="javax.xml.namespace,org.xml.sax"; version="${detect.java.version}", \
 jdk.dynalink.beans; version="${detect.java.version}", \
 jdk.dynalink.linker.support; version="${detect.java.version}", \
 jdk.dynalink.linker; version="${detect.java.version}", \
 jdk.dynalink.support; version="${detect.java.version}", \
 jdk.dynalink; version="${detect.java.version}", \
 jdk.javadoc.doclet; version="${detect.java.version}", \
 jdk.jfr.consumer; version="${detect.java.version}", \
 jdk.jfr; version="${detect.java.version}", \
 jdk.jshell.execution; version="${detect.java.version}", \
 jdk.jshell.spi; version="${detect.java.version}", \
 jdk.jshell.tool; version="${detect.java.version}", \
 jdk.jshell; version="${detect.java.version}", \
 jdk.management.jfr; version="${detect.java.version}", \
 jdk.nashorn.api.scripting; version="${detect.java.version}", \
 jdk.nashorn.api.tree; version="${detect.java.version}", \
 jdk.net; version="${detect.java.version}", \
 jdk.nio; version="${detect.java.version}", \
 jdk.security.jarsigner; version="${detect.java.version}", \
 jdk.swing.interop; version="${detect.java.version}", \
 netscape.javascript; version="${detect.java.version}", \
 org.ietf.jgss; version="${detect.java.version}", \
 org.w3c.dom; version="${detect.java.version}", \
 org.w3c.dom.bootstrap; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.ls; uses:="org.w3c.dom,org.w3c.dom.events"; version="${detect.java.version}", \
 org.w3c.dom.events; uses:="org.w3c.dom,org.w3c.dom.views"; version="${detect.java.version}", \
 org.w3c.dom.views; version="${detect.java.version}", \
 org.w3c.dom.traversal; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.ranges; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.css; uses:="org.w3c.dom,org.w3c.dom.stylesheets,org.w3c.dom.views"; version="${detect.java.version}", \
 org.w3c.dom.html; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.stylesheets; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.w3c.dom.xpath; uses:="org.w3c.dom"; version="${detect.java.version}", \
 org.xml.sax; version="${detect.java.version}", \
 org.xml.sax.ext; uses:="org.xml.sax,org.xml.sax.helpers"; version="${detect.java.version}", \
 org.xml.sax.helpers; uses:="org.xml.sax"; version="${detect.java.version}", \
 sun.misc; version="${detect.java.version}", \
 sun.reflect; version="${detect.java.version}"
